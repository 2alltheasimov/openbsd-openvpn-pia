#	$OpenBSD: pf.conf,v 1.55 2017/12/03 20:40:04 sthen Exp $
#
# See pf.conf(5) and /etc/examples/pf.conf

# external interface:
wi_if = "iwn0"
ext_if = "msk0"
ovpn_if = "tun0"
lan_net = "192.168.1.0/24"

# don't filter on loopback interface
set skip on lo0

# scrub incoming packets
match in all scrub (no-df)

#default: block everything
block

#antispoofing:
# antispoof for $ovpn_if inet
block in quick from urpf-failed

# only allow ssh connections from LAN. Can restrict to a few IP's later. 
# as it is, not necessary due to previous and following rules.
# block return in quick on $ext_if proto tcp from ! $lan_net to $ext_if port ssh
# Alternatively:
#pass in on $ext_if inet proto tcp from $lan_net to $ext_if port ssh flags S/SA synproxy state

# This is not secure enough:
# pass all traffic to and from the LAN
# these rules will create state entries due to the default
# "keep state" option which will automatically be applied. 
#pass in on $ext_if from $lan_net
#pass out on $ext_if to $lan_net

# pass tcp, udp, and icmp out on the interface to internet
pass out on $ovpn_if proto { tcp udp icmp } all keep state

# By default, do not permit remote connections to X11
block return in on ! lo0 proto tcp to port 6000:6010

# Port build user does not need network
block return out log proto {tcp udp} user _pbuild


#Anchors allow for dynamic rule changes. The following anchor is flushed by the
#openvpn up script. It is added by the openvpn down script. Anchor rules are
#read and implemented at boot up. 
# must open port udp 1197 in normal adapter for VPN to establish connection:
#turns out don't need the pass in rule:
#$ext_if gateway rule necessary so DNS can resolve the PIA server IP:

anchor "piaopenvpnsetup"{
    #pass out on $wi_if to 192.168.1.254
    pass out on $ext_if to 192.168.1.1
    pass out on $ext_if proto udp from self to any port 1197
}


#even if define anchor in separate file, must list here or rules
#won't be applied. This won't load the anchor's rules. Rules only
#loaded when run pfctl -a piaportforward -f /etc/anchor-piaportforward
# must open port for torrent client (given by PIA, example 58268) 
# to listen for inbound connections on. No need for router settings
# because of VPN.
# pass in on $ovpn_if proto { tcp udp } from any to $ovpn_if port 58268

anchor piaportforward







#in windows: I don't think the PIA client made any firewall rules. I made new
#rules for qbittorrent. One that blocks all traffic on private subnets other than
#10.0.0.0/8 (which is the subnet that PIA client assigns an IP on to the virtual
#interface), and one that blocks incoming traffic on the same, and then an 
#allow incoming one for TCP on the forarded port and the same for UDP. All
#rules specified the qbittorrent program only. It also worked when I blocked all
# 10.0.0.0/8 IPs except the one assigned to the virtual interface. When I blocked
# that one, it would fail. The windows firewall allows everything out by default
#I think, where this one blocks everything by default. 

#More secure: I need something that allows outbound communication over the normal
#web interface (only gateway IP) so that a request can be made to the ISPs DNS to
#resolve the PIA server(s) IP(s). This rule should be removed after openvpn
#connection established. I need a rule that allows outbound udp port 1197
#communication on the normal interface, (tested: don't need an inbound rule), before
#the connection is established. This is for openvpn to communicate with the PIA 
#server to set up the connection. This connection is not necessary after the vpn
#connection has been established, so should be canceled after established.

#The "pass out on ovpn_if all..." rule should always be in place. I may want to
#allow certain private LAN IPs to establish ssh communications (instead of allowing
#whole lan_net in and out) over the normal web interface: I think these rules can
#be permanent (do they need to be in or out rules?...I think just in). And then
#finally, I need to use the above ovpn inbound rule for opening the PIA forwarded
#port number in tcp and udp, but only after a vpn connection has been established.
#The rules need to be undone after vpn disconnection.  
